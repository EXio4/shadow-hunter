"use strict";var precacheConfig=[["/shadow-hunter/index.html","9dab377eb8bcac9655656825ecb18b5e"],["/shadow-hunter/static/css/main.759596be.css","2ac9a90052fc7bcce0d876fc3573d1f4"],["/shadow-hunter/static/js/main.26961425.js","196531103d5ab9e3614aa746c66fde52"],["/shadow-hunter/static/media/desert_sand.7d707fd4.png","7d707fd44759a776da775926e6d417d2"],["/shadow-hunter/static/media/edgy-16x16-arrow_down.f18b9305.svg","f18b93056268ff427295d95045487329"],["/shadow-hunter/static/media/edgy-16x16-arrow_left.fdfc0f3c.svg","fdfc0f3cf4bdc524896d10bcf21e89b7"],["/shadow-hunter/static/media/edgy-16x16-arrow_right.b1747ec8.svg","b1747ec80ae9c0434f531f46669c642e"],["/shadow-hunter/static/media/edgy-16x16-arrow_up.6bf29e91.svg","6bf29e918cd2c0490b62ad0f4db574a3"],["/shadow-hunter/static/media/gems.ded879cf.svg","ded879cf28d82e392aa8640bd63af4ee"],["/shadow-hunter/static/media/grass.517f1b5d.png","517f1b5dd85f663db89df321f6f748e1"],["/shadow-hunter/static/media/ice.863c4b29.png","863c4b293003600c5886bb7cc4b0460f"],["/shadow-hunter/static/media/lava.35c5516c.png","35c5516c8998fda147fd53aed3b1a6bb"],["/shadow-hunter/static/media/player.91441e5e.png","91441e5e0217b02737723e3cae18bf75"],["/shadow-hunter/static/media/sand.910e10d9.png","910e10d9aa657dd5c31f0814fb7bd48c"],["/shadow-hunter/static/media/snow.19d692a0.png","19d692a035bf2215a64ae1b8d2d38f7b"],["/shadow-hunter/static/media/stone.f9d7930a.png","f9d7930adaf9eb9e8c7c39d60d8f9503"],["/shadow-hunter/static/media/water.1c697976.png","1c6979763effe28e7f4f1d619b00f7ec"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,n,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return n.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),r=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,n=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,a),e=urlsToCacheKeys.has(n));var r="/shadow-hunter/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(n=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});